#############################################################################
# Makefile for building: qjson
# Generated by qmake (2.01a) (Qt 4.7.4) on: Sat Oct 29 17:28:56 2011
# Project:  qjson.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile qjson.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_DECLARATIVE_LIB -DQT_PHONON_LIB -DQT_SCRIPT_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -march=i686 -mtune=generic -O2 -pipe -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -fno-strict-aliasing -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -march=i686 -mtune=generic -O2 -pipe -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -fno-strict-aliasing -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt/mkspecs/linux-g++ -I. -I/usr/include/QtCore -I/usr/include/QtNetwork -I/usr/include/QtGui -I/usr/include/QtScript -I/usr/include/phonon -I/usr/include/QtDeclarative -I/usr/include -Iqxtglobalshortcut -I/usr/include/phonon_compat -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1,--sort-common,--as-needed,-z,relro,--hash-style=gnu -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -lQtDeclarative -lphonon -lQtScript -lQtGui -lQtNetwork -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = qxtglobalshortcut/qxtglobalshortcut.cpp \
		qxtglobalshortcut/qxtglobalshortcut_x11.cpp \
		main.cpp \
		widget.cpp \
		song.cpp \
		ShortCutLineEdit.cpp \
		shortcut.cpp \
		myproxy.cpp \
		login.cpp \
		declarativeprogressbar.cpp \
		declarativewidget.cpp \
		lrcshow.cpp \
		lrcdesktop.cpp \
		lrcwidget.cpp moc_qxtglobalshortcut.cpp \
		moc_widget.cpp \
		moc_ShortCutLineEdit.cpp \
		moc_shortcut.cpp \
		moc_myproxy.cpp \
		moc_login.cpp \
		moc_declarativeprogressbar.cpp \
		moc_declarativewidget.cpp \
		moc_lrcshow.cpp \
		moc_lrcdesktop.cpp \
		moc_lrcwidget.cpp \
		qrc_ico.cpp
OBJECTS       = qxtglobalshortcut.o \
		qxtglobalshortcut_x11.o \
		main.o \
		widget.o \
		song.o \
		ShortCutLineEdit.o \
		shortcut.o \
		myproxy.o \
		login.o \
		declarativeprogressbar.o \
		declarativewidget.o \
		lrcshow.o \
		lrcdesktop.o \
		lrcwidget.o \
		moc_qxtglobalshortcut.o \
		moc_widget.o \
		moc_ShortCutLineEdit.o \
		moc_shortcut.o \
		moc_myproxy.o \
		moc_login.o \
		moc_declarativeprogressbar.o \
		moc_declarativewidget.o \
		moc_lrcshow.o \
		moc_lrcdesktop.o \
		moc_lrcwidget.o \
		qrc_ico.o
DIST          = /usr/share/qt/mkspecs/common/g++.conf \
		/usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		qxtglobalshortcut/qxtglobalshortcut.pri \
		/usr/share/qt/mkspecs/features/release.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/qt.prf \
		/usr/share/qt/mkspecs/features/unix/thread.prf \
		/usr/share/qt/mkspecs/features/moc.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf \
		qjson.pro
QMAKE_TARGET  = qjson
DESTDIR       = 
TARGET        = qjson

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_shortcut.h ui_myproxy.h ui_login.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: qjson.pro  /usr/share/qt/mkspecs/linux-g++/qmake.conf /usr/share/qt/mkspecs/common/g++.conf \
		/usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		qxtglobalshortcut/qxtglobalshortcut.pri \
		/usr/share/qt/mkspecs/features/release.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/qt.prf \
		/usr/share/qt/mkspecs/features/unix/thread.prf \
		/usr/share/qt/mkspecs/features/moc.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtDeclarative.prl \
		/usr/lib/libQtScript.prl \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtNetwork.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -o Makefile qjson.pro
/usr/share/qt/mkspecs/common/g++.conf:
/usr/share/qt/mkspecs/common/unix.conf:
/usr/share/qt/mkspecs/common/linux.conf:
/usr/share/qt/mkspecs/qconfig.pri:
/usr/share/qt/mkspecs/modules/qt_phonon.pri:
/usr/share/qt/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt/mkspecs/features/qt_functions.prf:
/usr/share/qt/mkspecs/features/qt_config.prf:
/usr/share/qt/mkspecs/features/exclusive_builds.prf:
/usr/share/qt/mkspecs/features/default_pre.prf:
qxtglobalshortcut/qxtglobalshortcut.pri:
/usr/share/qt/mkspecs/features/release.prf:
/usr/share/qt/mkspecs/features/default_post.prf:
/usr/share/qt/mkspecs/features/warn_on.prf:
/usr/share/qt/mkspecs/features/qt.prf:
/usr/share/qt/mkspecs/features/unix/thread.prf:
/usr/share/qt/mkspecs/features/moc.prf:
/usr/share/qt/mkspecs/features/resources.prf:
/usr/share/qt/mkspecs/features/uic.prf:
/usr/share/qt/mkspecs/features/yacc.prf:
/usr/share/qt/mkspecs/features/lex.prf:
/usr/share/qt/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtDeclarative.prl:
/usr/lib/libQtScript.prl:
/usr/lib/libQtGui.prl:
/usr/lib/libQtNetwork.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile qjson.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/qjson1.0.0 || $(MKDIR) .tmp/qjson1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/qjson1.0.0/ && $(COPY_FILE) --parents qxtglobalshortcut/qxtglobal.h qxtglobalshortcut/qxtglobalshortcut.h qxtglobalshortcut/qxtglobalshortcut_p.h widget.h song.h ShortCutLineEdit.h shortcut.h myproxy.h login.h declarativeprogressbar.h nativequickwidgets.h declarativewidget.h lrcshow.h lrcdesktop.h lrcwidget.h .tmp/qjson1.0.0/ && $(COPY_FILE) --parents ico.qrc .tmp/qjson1.0.0/ && $(COPY_FILE) --parents qxtglobalshortcut/qxtglobalshortcut.cpp qxtglobalshortcut/qxtglobalshortcut_x11.cpp main.cpp widget.cpp song.cpp ShortCutLineEdit.cpp shortcut.cpp myproxy.cpp login.cpp declarativeprogressbar.cpp declarativewidget.cpp lrcshow.cpp lrcdesktop.cpp lrcwidget.cpp .tmp/qjson1.0.0/ && $(COPY_FILE) --parents shortcut.ui myproxy.ui login.ui .tmp/qjson1.0.0/ && (cd `dirname .tmp/qjson1.0.0` && $(TAR) qjson1.0.0.tar qjson1.0.0 && $(COMPRESS) qjson1.0.0.tar) && $(MOVE) `dirname .tmp/qjson1.0.0`/qjson1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/qjson1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_qxtglobalshortcut.cpp moc_widget.cpp moc_ShortCutLineEdit.cpp moc_shortcut.cpp moc_myproxy.cpp moc_login.cpp moc_declarativeprogressbar.cpp moc_declarativewidget.cpp moc_lrcshow.cpp moc_lrcdesktop.cpp moc_lrcwidget.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_qxtglobalshortcut.cpp moc_widget.cpp moc_ShortCutLineEdit.cpp moc_shortcut.cpp moc_myproxy.cpp moc_login.cpp moc_declarativeprogressbar.cpp moc_declarativewidget.cpp moc_lrcshow.cpp moc_lrcdesktop.cpp moc_lrcwidget.cpp
moc_qxtglobalshortcut.cpp: qxtglobalshortcut/qxtglobal.h \
		qxtglobalshortcut/qxtglobalshortcut.h
	/usr/bin/moc $(DEFINES) $(INCPATH) qxtglobalshortcut/qxtglobalshortcut.h -o moc_qxtglobalshortcut.cpp

moc_widget.cpp: song.h \
		login.h \
		myproxy.h \
		shortcut.h \
		qxtglobalshortcut/qxtglobalshortcut.h \
		qxtglobalshortcut/qxtglobal.h \
		lrcshow.h \
		lrcwidget.h \
		lrcdesktop.h \
		widget.h
	/usr/bin/moc $(DEFINES) $(INCPATH) widget.h -o moc_widget.cpp

moc_ShortCutLineEdit.cpp: ShortCutLineEdit.h
	/usr/bin/moc $(DEFINES) $(INCPATH) ShortCutLineEdit.h -o moc_ShortCutLineEdit.cpp

moc_shortcut.cpp: qxtglobalshortcut/qxtglobalshortcut.h \
		qxtglobalshortcut/qxtglobal.h \
		shortcut.h
	/usr/bin/moc $(DEFINES) $(INCPATH) shortcut.h -o moc_shortcut.cpp

moc_myproxy.cpp: myproxy.h
	/usr/bin/moc $(DEFINES) $(INCPATH) myproxy.h -o moc_myproxy.cpp

moc_login.cpp: login.h
	/usr/bin/moc $(DEFINES) $(INCPATH) login.h -o moc_login.cpp

moc_declarativeprogressbar.cpp: declarativewidget.h \
		declarativeprogressbar.h
	/usr/bin/moc $(DEFINES) $(INCPATH) declarativeprogressbar.h -o moc_declarativeprogressbar.cpp

moc_declarativewidget.cpp: declarativewidget.h
	/usr/bin/moc $(DEFINES) $(INCPATH) declarativewidget.h -o moc_declarativewidget.cpp

moc_lrcshow.cpp: lrcwidget.h \
		lrcdesktop.h \
		lrcshow.h
	/usr/bin/moc $(DEFINES) $(INCPATH) lrcshow.h -o moc_lrcshow.cpp

moc_lrcdesktop.cpp: lrcdesktop.h
	/usr/bin/moc $(DEFINES) $(INCPATH) lrcdesktop.h -o moc_lrcdesktop.cpp

moc_lrcwidget.cpp: lrcwidget.h
	/usr/bin/moc $(DEFINES) $(INCPATH) lrcwidget.h -o moc_lrcwidget.cpp

compiler_rcc_make_all: qrc_ico.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_ico.cpp
qrc_ico.cpp: ico.qrc \
		ui.qml \
		Channellist.qml \
		ProgressBar.qml \
		douban.ico \
		image/eject.png \
		image/small.png \
		image/next.png \
		image/trash.png \
		image/down.png \
		image/min.png \
		image/big.png \
		image/rss_32x32.png \
		image/doubanmusic.png \
		image/play.png \
		image/x.png \
		image/dislike.png \
		image/pause.png \
		image/like.png
	/usr/bin/rcc -name ico ico.qrc -o qrc_ico.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_shortcut.h ui_myproxy.h ui_login.h
compiler_uic_clean:
	-$(DEL_FILE) ui_shortcut.h ui_myproxy.h ui_login.h
ui_shortcut.h: shortcut.ui
	/usr/bin/uic shortcut.ui -o ui_shortcut.h

ui_myproxy.h: myproxy.ui
	/usr/bin/uic myproxy.ui -o ui_myproxy.h

ui_login.h: login.ui
	/usr/bin/uic login.ui -o ui_login.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 

####### Compile

qxtglobalshortcut.o: qxtglobalshortcut/qxtglobalshortcut.cpp qxtglobalshortcut/qxtglobalshortcut.h \
		qxtglobalshortcut/qxtglobal.h \
		qxtglobalshortcut/qxtglobalshortcut_p.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qxtglobalshortcut.o qxtglobalshortcut/qxtglobalshortcut.cpp

qxtglobalshortcut_x11.o: qxtglobalshortcut/qxtglobalshortcut_x11.cpp qxtglobalshortcut/qxtglobalshortcut_p.h \
		qxtglobalshortcut/qxtglobalshortcut.h \
		qxtglobalshortcut/qxtglobal.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qxtglobalshortcut_x11.o qxtglobalshortcut/qxtglobalshortcut_x11.cpp

main.o: main.cpp widget.h \
		song.h \
		login.h \
		myproxy.h \
		shortcut.h \
		qxtglobalshortcut/qxtglobalshortcut.h \
		qxtglobalshortcut/qxtglobal.h \
		lrcshow.h \
		lrcwidget.h \
		lrcdesktop.h \
		nativequickwidgets.h \
		declarativeprogressbar.h \
		declarativewidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

widget.o: widget.cpp widget.h \
		song.h \
		login.h \
		myproxy.h \
		shortcut.h \
		qxtglobalshortcut/qxtglobalshortcut.h \
		qxtglobalshortcut/qxtglobal.h \
		lrcshow.h \
		lrcwidget.h \
		lrcdesktop.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o widget.o widget.cpp

song.o: song.cpp song.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o song.o song.cpp

ShortCutLineEdit.o: ShortCutLineEdit.cpp ShortCutLineEdit.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ShortCutLineEdit.o ShortCutLineEdit.cpp

shortcut.o: shortcut.cpp shortcut.h \
		qxtglobalshortcut/qxtglobalshortcut.h \
		qxtglobalshortcut/qxtglobal.h \
		ui_shortcut.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o shortcut.o shortcut.cpp

myproxy.o: myproxy.cpp myproxy.h \
		ui_myproxy.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o myproxy.o myproxy.cpp

login.o: login.cpp login.h \
		ui_login.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o login.o login.cpp

declarativeprogressbar.o: declarativeprogressbar.cpp declarativeprogressbar.h \
		declarativewidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o declarativeprogressbar.o declarativeprogressbar.cpp

declarativewidget.o: declarativewidget.cpp declarativewidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o declarativewidget.o declarativewidget.cpp

lrcshow.o: lrcshow.cpp lrcshow.h \
		lrcwidget.h \
		lrcdesktop.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o lrcshow.o lrcshow.cpp

lrcdesktop.o: lrcdesktop.cpp lrcdesktop.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o lrcdesktop.o lrcdesktop.cpp

lrcwidget.o: lrcwidget.cpp lrcwidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o lrcwidget.o lrcwidget.cpp

moc_qxtglobalshortcut.o: moc_qxtglobalshortcut.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_qxtglobalshortcut.o moc_qxtglobalshortcut.cpp

moc_widget.o: moc_widget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_widget.o moc_widget.cpp

moc_ShortCutLineEdit.o: moc_ShortCutLineEdit.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_ShortCutLineEdit.o moc_ShortCutLineEdit.cpp

moc_shortcut.o: moc_shortcut.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_shortcut.o moc_shortcut.cpp

moc_myproxy.o: moc_myproxy.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_myproxy.o moc_myproxy.cpp

moc_login.o: moc_login.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_login.o moc_login.cpp

moc_declarativeprogressbar.o: moc_declarativeprogressbar.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_declarativeprogressbar.o moc_declarativeprogressbar.cpp

moc_declarativewidget.o: moc_declarativewidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_declarativewidget.o moc_declarativewidget.cpp

moc_lrcshow.o: moc_lrcshow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_lrcshow.o moc_lrcshow.cpp

moc_lrcdesktop.o: moc_lrcdesktop.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_lrcdesktop.o moc_lrcdesktop.cpp

moc_lrcwidget.o: moc_lrcwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_lrcwidget.o moc_lrcwidget.cpp

qrc_ico.o: qrc_ico.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_ico.o qrc_ico.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

deb-dep:
	IFS=', '; \
	apt-get -qq install build-essential $$(sed -n 's/([^)]*)//; s/^Build-Depends: \(.*\)/\1/p' debian/control)

DISTRO = unstable
deb:
	$(ROOT)/util/genchangelog wmii-hg $(VERSION) $(DISTRO)
	dpkg-buildpackage -rfakeroot -b -nc
